{"EDITOR_STATE":{"allProjectFiles":{"581ce3b6-d5d5-4f16-9564-e012e034fc88":{"id":"581ce3b6-d5d5-4f16-9564-e012e034fc88","parent":null,"name":"Hiru_project120107","type":"DIRECTORY","isDirectory":true,"children":["4d737712-ba5e-4baa-93bb-5fb0c8d3e5be"],"isRemovable":false,"filePath":"Hiru_project120107"},"4d737712-ba5e-4baa-93bb-5fb0c8d3e5be":{"id":"4d737712-ba5e-4baa-93bb-5fb0c8d3e5be","parent":"581ce3b6-d5d5-4f16-9564-e012e034fc88","name":"Hiru_project120107-lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_project120107/Hiru_project120107-lambda.js","code":"let AWS = require('aws-sdk');\nexports.handler = function(event, context, callback){\n\n\n\n console.log(\"this is a test\")\n\n\n}","ast":{"type":"File","start":0,"end":121,"loc":{"start":{"line":1,"column":0},"end":{"line":9,"column":1}},"program":{"type":"Program","start":0,"end":121,"loc":{"start":{"line":1,"column":0},"end":{"line":9,"column":1}},"sourceType":"module","body":[{"type":"VariableDeclaration","start":0,"end":29,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"declarations":[{"type":"VariableDeclarator","start":4,"end":28,"loc":{"start":{"line":1,"column":4},"end":{"line":1,"column":28}},"id":{"type":"Identifier","start":4,"end":7,"loc":{"start":{"line":1,"column":4},"end":{"line":1,"column":7},"identifierName":"AWS"},"name":"AWS"},"init":{"type":"CallExpression","start":10,"end":28,"loc":{"start":{"line":1,"column":10},"end":{"line":1,"column":28}},"callee":{"type":"Identifier","start":10,"end":17,"loc":{"start":{"line":1,"column":10},"end":{"line":1,"column":17},"identifierName":"require"},"name":"require"},"arguments":[{"type":"StringLiteral","start":18,"end":27,"loc":{"start":{"line":1,"column":18},"end":{"line":1,"column":27}},"extra":{"rawValue":"aws-sdk","raw":"'aws-sdk'"},"value":"aws-sdk"}]}}],"kind":"let"},{"type":"ExpressionStatement","start":30,"end":121,"loc":{"start":{"line":2,"column":0},"end":{"line":9,"column":1}},"expression":{"type":"AssignmentExpression","start":30,"end":121,"loc":{"start":{"line":2,"column":0},"end":{"line":9,"column":1}},"operator":"=","left":{"type":"MemberExpression","start":30,"end":45,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":15}},"object":{"type":"Identifier","start":30,"end":37,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":7},"identifierName":"exports"},"name":"exports"},"property":{"type":"Identifier","start":38,"end":45,"loc":{"start":{"line":2,"column":8},"end":{"line":2,"column":15},"identifierName":"handler"},"name":"handler"},"computed":false},"right":{"type":"FunctionExpression","start":48,"end":121,"loc":{"start":{"line":2,"column":18},"end":{"line":9,"column":1}},"id":null,"generator":false,"async":false,"params":[{"type":"Identifier","start":57,"end":62,"loc":{"start":{"line":2,"column":27},"end":{"line":2,"column":32},"identifierName":"event"},"name":"event"},{"type":"Identifier","start":64,"end":71,"loc":{"start":{"line":2,"column":34},"end":{"line":2,"column":41},"identifierName":"context"},"name":"context"},{"type":"Identifier","start":73,"end":81,"loc":{"start":{"line":2,"column":43},"end":{"line":2,"column":51},"identifierName":"callback"},"name":"callback"}],"body":{"type":"BlockStatement","start":82,"end":121,"loc":{"start":{"line":2,"column":52},"end":{"line":9,"column":1}},"body":[{"type":"ExpressionStatement","start":88,"end":117,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":30}},"expression":{"type":"CallExpression","start":88,"end":117,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":30}},"callee":{"type":"MemberExpression","start":88,"end":99,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":12}},"object":{"type":"Identifier","start":88,"end":95,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":8},"identifierName":"console"},"name":"console"},"property":{"type":"Identifier","start":96,"end":99,"loc":{"start":{"line":6,"column":9},"end":{"line":6,"column":12},"identifierName":"log"},"name":"log"},"computed":false},"arguments":[{"type":"StringLiteral","start":100,"end":116,"loc":{"start":{"line":6,"column":13},"end":{"line":6,"column":29}},"extra":{"rawValue":"this is a test","raw":"\"this is a test\""},"value":"this is a test"}]}}],"directives":[]}}}}],"directives":[]},"comments":[]},"formatted":true,"resources":["apigusEast1HiruTestsamplepost"],"triggers":["apigusEast1HiruTestsamplepost"]}},"rootNode":"581ce3b6-d5d5-4f16-9564-e012e034fc88","openFiles":["4d737712-ba5e-4baa-93bb-5fb0c8d3e5be"],"currentFileId":"4d737712-ba5e-4baa-93bb-5fb0c8d3e5be","resources":{"apigusEast1HiruTestsamplepost":{"name":"apigusEast1HiruTestsamplepost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"Hiru_Test","apiId":"eckh0sacp9","endpointType":"EDGE","rootResourceId":"9zkt4h6n7c","resourceMode":0,"resourceName":"sample","resourcePath":"/sample","restMethod":"POST"},"usage":{}}},"state":"CHANGED","triggers":["apigusEast1HiruTestsamplepost"],"packageJSON":{"dependencies":{"aws-sdk":"2.176.0","async":{"name":"async","concatenatedName":"async","downloadsLast30Days":44149852,"downloadsRatio":0.3422839521607326,"humanDownloadsLast30Days":"44.1m","popular":true,"version":"2.6.0","versions":{"0.1.0":"2010-12-19T16:41:51.765Z","0.1.1":"2010-12-19T16:41:51.765Z","0.1.2":"2010-12-19T16:41:51.765Z","0.1.3":"2010-12-19T16:41:51.765Z","0.1.4":"2010-12-19T16:41:51.765Z","0.1.5":"2010-12-19T16:41:51.765Z","0.1.6":"2010-12-19T16:41:51.765Z","0.1.7":"2010-12-19T16:41:51.765Z","0.1.8":"2011-01-18T09:56:53.975Z","0.1.9":"2011-04-27T20:48:08.634Z","0.1.10":"2011-09-19T04:40:01.573Z","0.1.11":"2011-10-14T17:07:28.752Z","0.1.12":"2011-10-14T17:19:19.452Z","0.1.13":"2011-10-29T22:33:52.448Z","0.1.14":"2011-10-29T22:40:14.486Z","0.1.15":"2011-11-01T23:05:01.415Z","0.1.16":"2012-02-13T04:56:23.926Z","0.1.17":"2012-02-27T02:40:58.997Z","0.1.18":"2012-02-27T16:51:02.109Z","0.1.19":"2012-05-24T06:51:06.109Z","0.1.20":"2012-05-24T06:53:39.997Z","0.1.21":"2012-05-24T07:16:16.753Z","0.1.22":"2012-05-30T18:26:44.821Z","0.1.23":"2012-10-04T13:52:08.947Z","0.2.0":"2013-02-04T11:38:08.943Z","0.2.1":"2013-02-04T11:52:34.110Z","0.2.2":"2013-02-05T15:55:23.202Z","0.2.3":"2013-02-06T12:48:37.415Z","0.2.4":"2013-02-07T17:26:22.236Z","0.2.5":"2013-02-10T22:42:00.162Z","0.2.6":"2013-03-03T11:29:52.674Z","0.2.7":"2013-04-09T20:50:04.712Z","0.2.8":"2013-05-01T10:04:07.430Z","0.2.9":"2013-05-28T07:50:48.795Z","0.2.10":"2014-01-23T16:23:57.271Z","0.3.0":"2014-03-28T17:16:05.640Z","0.4.0":"2014-03-28T17:25:12.580Z","0.4.1":"2014-03-30T11:42:54.298Z","0.5.0":"2014-03-30T11:46:31.381Z","0.6.0":"2014-03-30T12:04:32.275Z","0.6.1":"2014-03-30T20:35:32.550Z","0.6.2":"2014-03-31T09:56:20.294Z","0.7.0":"2014-04-07T09:07:34.303Z","0.8.0":"2014-04-29T15:26:34.028Z","0.9.0":"2014-05-16T10:20:22.247Z","0.9.2":"2015-05-19T08:45:57.198Z","1.0.0":"2015-05-20T23:40:05.710Z","1.1.0":"2015-06-01T07:59:05.989Z","1.2.0":"2015-06-02T20:56:04.526Z","1.1.1":"2015-06-08T01:26:56.285Z","1.2.1":"2015-06-08T01:43:33.907Z","1.3.0":"2015-06-29T16:14:01.899Z","1.4.0":"2015-07-20T02:11:50.089Z","1.4.1":"2015-08-07T21:08:08.172Z","1.4.2":"2015-08-09T18:10:22.399Z","1.5.0":"2015-10-26T01:41:14.220Z","1.5.1":"2016-01-02T23:38:22.435Z","1.5.2":"2016-01-08T00:03:32.998Z","2.0.0-alpha.0":"2016-03-18T23:46:58.334Z","2.0.0-rc.1":"2016-03-18T23:52:37.386Z","2.0.0-rc.2":"2016-03-24T03:39:49.460Z","2.0.0-rc.3":"2016-04-07T21:11:27.200Z","2.0.0-rc.4":"2016-05-05T23:30:00.507Z","2.0.0-rc.5":"2016-05-16T20:15:02.032Z","2.0.0-rc.6":"2016-06-07T21:13:20.130Z","2.0.0":"2016-07-13T00:23:10.577Z","2.0.1":"2016-07-22T20:37:03.855Z","2.1.0":"2016-10-12T18:22:41.697Z","2.1.1":"2016-10-12T18:58:53.479Z","2.1.2":"2016-10-16T22:46:37.667Z","2.1.4":"2016-11-22T19:16:50.375Z","2.1.5":"2017-02-19T01:31:00.277Z","2.2.0":"2017-03-25T20:39:42.923Z","2.3.0":"2017-04-02T22:55:24.664Z","2.4.0":"2017-04-29T23:23:32.659Z","2.4.1":"2017-05-22T03:57:15.218Z","2.5.0":"2017-06-25T23:42:02.387Z","2.6.0":"2017-11-07T02:45:53.140Z"},"tags":{"latest":"2.6.0"},"description":"Higher-order functions and common patterns for asynchronous code","dependencies":{"lodash":"^4.14.0"},"devDependencies":{"babel-cli":"^6.24.0","babel-core":"^6.24.0","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-istanbul":"^2.0.1","babel-plugin-transform-es2015-modules-commonjs":"^6.3.16","babel-preset-es2015":"^6.3.13","babel-preset-es2017":"^6.22.0","babelify":"^7.2.0","benchmark":"^2.1.1","bluebird":"^3.4.6","chai":"^3.1.0","cheerio":"^0.22.0","coveralls":"^2.11.2","es6-promise":"^2.3.0","eslint":"^2.13.1","fs-extra":"^0.26.7","gh-pages-deploy":"^0.4.2","jsdoc":"^3.4.0","karma":"^1.3.0","karma-browserify":"^5.1.0","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.2.0","karma-mocha-reporter":"^2.2.0","mocha":"^3.1.2","native-promise-only":"^0.8.0-a","nyc":"^7.0.0","recursive-readdir":"^1.3.0","rimraf":"^2.5.0","rollup":"^0.36.3","rollup-plugin-node-resolve":"^2.0.0","rollup-plugin-npm":"^2.0.0","rsvp":"^3.0.18","semver":"^4.3.6","uglify-js":"~2.7.3","vinyl-buffer":"^1.0.0","vinyl-source-stream":"^1.1.0","watchify":"^3.7.0","yargs":"~3.9.1"},"githubRepo":{"user":"caolan","project":"async","path":"","head":"master"},"gitHead":"master","readme":"![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![libhive - Open source examples](https://www.libhive.com/providers/npm/packages/async/examples/badge.svg)](https://www.libhive.com/providers/npm/packages/async)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm install --save async`, it can also be used directly in the browser.\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```\n","owner":{"name":"caolan","avatar":"https://github.com/caolan.png","link":"https://github.com/caolan"},"deprecated":false,"badPackage":false,"homepage":"https://caolan.github.io/async/","license":"MIT","keywords":["async","callback","module","utility"],"created":1292776911765,"modified":1515706296035,"lastPublisher":{"name":"aearly","email":"alexander.early@gmail.com","avatar":"https://gravatar.com/avatar/7ae73452743a32fe508b5d7fab1aab27","link":"https://www.npmjs.com/~aearly"},"owners":[{"name":"aearly","email":"alexander.early@gmail.com","avatar":"https://gravatar.com/avatar/7ae73452743a32fe508b5d7fab1aab27","link":"https://www.npmjs.com/~aearly"},{"name":"beaugunderson","email":"beau@beaugunderson.com","avatar":"https://gravatar.com/avatar/0066561fa3649531b915aba34caff0b8","link":"https://www.npmjs.com/~beaugunderson"},{"name":"caolan","email":"caolan.mcmahon@gmail.com","avatar":"https://gravatar.com/avatar/61eaeeb5a968ca05c5acadd0f0a9fada","link":"https://www.npmjs.com/~caolan"},{"name":"hargasinski","email":"argasinski.hubert@gmail.com","avatar":"https://gravatar.com/avatar/621dcc28705eb41560226fffb9c7ee9b","link":"https://www.npmjs.com/~hargasinski"},{"name":"megawac","email":"megawac@gmail.com","avatar":"https://gravatar.com/avatar/940d0af29bc817075f3eb6aacf40254f","link":"https://www.npmjs.com/~megawac"}],"lastCrawl":"2018-01-11T21:31:38.811Z","popularName":"async","dependents":1692546,"humanDependents":"1.7m","changelogFilename":"https://raw.githubusercontent.com/caolan/async/master/CHANGELOG.md","objectID":"async","_highlightResult":{"name":{"value":"<em>asyn</em>c","matchLevel":"full","fullyHighlighted":false,"matchedWords":["asyn"]},"concatenatedName":{"value":"<em>asyn</em>c","matchLevel":"full","fullyHighlighted":false,"matchedWords":["asyn"]},"description":{"value":"Higher-order functions and common patterns for <em>asyn</em>chronous code","matchLevel":"full","fullyHighlighted":false,"matchedWords":["asyn"]},"owner":{"name":{"value":"caolan","matchLevel":"none","matchedWords":[]}},"keywords":[{"value":"<em>asyn</em>c","matchLevel":"full","fullyHighlighted":false,"matchedWords":["asyn"]},{"value":"callback","matchLevel":"none","matchedWords":[]},{"value":"module","matchLevel":"none","matchedWords":[]},{"value":"utility","matchLevel":"none","matchedWords":[]}],"owners":[{"name":{"value":"aearly","matchLevel":"none","matchedWords":[]}},{"name":{"value":"beaugunderson","matchLevel":"none","matchedWords":[]}},{"name":{"value":"caolan","matchLevel":"none","matchedWords":[]}},{"name":{"value":"hargasinski","matchLevel":"none","matchedWords":[]}},{"name":{"value":"megawac","matchLevel":"none","matchedWords":[]}}],"popularName":{"value":"<em>asyn</em>c","matchLevel":"full","fullyHighlighted":false,"matchedWords":["asyn"]}},"types":"// Type definitions for Async 2.0.1\n// Project: https://github.com/caolan/async\n// Definitions by: Boris Yankov <https://github.com/borisyankov>, Arseniy Maximov <https://github.com/kern0>, Joe Herman <https://github.com/Penryn>, Angus Fenying <https://github.com/fenying>, Pascal Martin <https://github.com/pascalmartin>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.1\n\nexport as namespace async;\n\nexport interface Dictionary<T> { [key: string]: T; }\n\nexport interface ErrorCallback<T> { (err?: T): void; }\nexport interface AsyncBooleanResultCallback<E> { (err?: E, truthValue?: boolean): void; }\nexport interface AsyncResultCallback<T, E> { (err?: E, result?: T): void; }\nexport interface AsyncResultArrayCallback<T, E> { (err?: E, results?: Array<T | undefined>): void; }\nexport interface AsyncResultObjectCallback<T, E> { (err: E | undefined, results: Dictionary<T | undefined>): void; }\n\nexport interface AsyncFunction<T, E> { (callback: (err?: E, result?: T) => void): void; }\nexport interface AsyncFunctionEx<T, E> { (callback: (err?: E, ...results: T[]) => void): void; }\nexport interface AsyncIterator<T, E> { (item: T, callback: ErrorCallback<E>): void; }\nexport interface AsyncForEachOfIterator<T, E> { (item: T, key: number|string, callback: ErrorCallback<E>): void; }\nexport interface AsyncResultIterator<T, R, E> { (item: T, callback: AsyncResultCallback<R, E>): void; }\nexport interface AsyncMemoIterator<T, R, E> { (memo: R | undefined, item: T, callback: AsyncResultCallback<R, E>): void; }\nexport interface AsyncBooleanIterator<T, E> { (item: T, callback: AsyncBooleanResultCallback<E>): void; }\n\nexport interface AsyncWorker<T, E> { (task: T, callback: ErrorCallback<E>): void; }\nexport interface AsyncVoidFunction<E> { (callback: ErrorCallback<E>): void; }\n\nexport type AsyncAutoTasks<R extends Dictionary<any>, E> = { [K in keyof R]: AsyncAutoTask<R[K], R, E> }\nexport type AsyncAutoTask<R1, R extends Dictionary<any>, E> = AsyncAutoTaskFunctionWithoutDependencies<R1, E> | (keyof R | AsyncAutoTaskFunction<R1, R, E>)[];\nexport interface AsyncAutoTaskFunctionWithoutDependencies<R1, E> { (cb: AsyncResultCallback<R1, E> | ErrorCallback<E>): void; }\nexport interface AsyncAutoTaskFunction<R1, R extends Dictionary<any>, E> { (results: R, cb: AsyncResultCallback<R1, E> | ErrorCallback<E>): void; }\n\nexport interface AsyncQueue<T> {\n    length(): number;\n    started: boolean;\n    running(): number;\n    idle(): boolean;\n    concurrency: number;\n    push<E>(task: T, callback?: ErrorCallback<E>): void;\n    push<R,E>(task: T, callback?: AsyncResultCallback<R, E>): void;\n    push<E>(task: T[], callback?: ErrorCallback<E>): void;\n    unshift<E>(task: T, callback?: ErrorCallback<E>): void;\n    unshift<E>(task: T[], callback?: ErrorCallback<E>): void;\n    saturated: () => any;\n    empty: () => any;\n    drain: () => any;\n    paused: boolean;\n    pause(): void\n    resume(): void;\n    kill(): void;\n    workersList(): {\n        data: T,\n        callback: Function\n    }[];\n    error(error: Error, data: any): void;\n    unsaturated(): void;\n    buffer: number;\n}\n\nexport interface AsyncPriorityQueue<T> {\n    length(): number;\n    concurrency: number;\n    started: boolean;\n    paused: boolean;\n    push<R,E>(task: T, priority: number, callback?: AsyncResultArrayCallback<R, E>): void;\n    push<R,E>(task: T[], priority: number, callback?: AsyncResultArrayCallback<R, E>): void;\n    saturated: () => any;\n    empty: () => any;\n    drain: () => any;\n    running(): number;\n    idle(): boolean;\n    pause(): void;\n    resume(): void;\n    kill(): void;\n    workersList(): {\n        data: T,\n        priority: number,\n        callback: Function\n    }[];\n    error(error: Error, data: any): void;\n    unsaturated(): void;\n    buffer: number;\n}\n\nexport interface AsyncCargo {\n    length(): number;\n    payload?: number;\n    push(task: any, callback? : Function): void;\n    push(task: any[], callback? : Function): void;\n    saturated(): void;\n    empty(): void;\n    drain(): void;\n    idle(): boolean;\n    pause(): void;\n    resume(): void;\n    kill(): void;\n}\n\n// Collections\nexport function each<T, E>(arr: T[] | IterableIterator<T>, iterator: AsyncIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport function each<T, E>(arr: Dictionary<T>, iterator: AsyncIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport const eachSeries: typeof each;\nexport function eachLimit<T, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport function eachLimit<T, E>(arr: Dictionary<T>, limit: number, iterator: AsyncIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport const forEach: typeof each;\nexport const forEachSeries: typeof each;\nexport const forEachLimit: typeof eachLimit;\nexport function forEachOf<T, E>(obj: T[] | IterableIterator<T>, iterator: AsyncForEachOfIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport function forEachOf<T, E>(obj: Dictionary<T>, iterator: AsyncForEachOfIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport const forEachOfSeries: typeof forEachOf;\nexport function forEachOfLimit<T, E>(obj: T[] | IterableIterator<T>, limit: number, iterator: AsyncForEachOfIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport function forEachOfLimit<T, E>(obj: Dictionary<T>, limit: number, iterator: AsyncForEachOfIterator<T, E>, callback?: ErrorCallback<E>): void;\nexport const eachOf: typeof forEachOf;\nexport const eachOfSeries: typeof forEachOf;\nexport const eachOfLimit: typeof forEachOfLimit;\nexport function map<T, R, E>(arr: T[] | IterableIterator<T>, iterator: AsyncResultIterator<T, R, E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport function map<T, R, E>(arr: Dictionary<T>, iterator: AsyncResultIterator<T, R, E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport const mapSeries: typeof map;\nexport function mapLimit<T, R, E>(\n    arr: T[] | Dictionary<T> | IterableIterator<T>,\n    limit: number,\n    iterator: AsyncResultIterator<T, R, E>,\n    callback?: AsyncResultArrayCallback<R, E>\n): void;\nexport function mapValuesLimit<T, R, E>(obj: Dictionary<T>, limit: number, iteratee: (value: T, key: string, callback: AsyncResultCallback<R, E>) => void, callback: AsyncResultObjectCallback<R, E>): void;\nexport function mapValues<T, R, E>(obj: Dictionary<T>, iteratee: (value: T, key: string, callback: AsyncResultCallback<R, E>) => void, callback: AsyncResultObjectCallback<R, E>): void;\nexport const mapValuesSeries: typeof mapValues;\nexport function filter<T, E>(arr: T[] | IterableIterator<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function filter<T, E>(arr: Dictionary<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport const filterSeries: typeof filter;\nexport function filterLimit<T, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function filterLimit<T, E>(arr: Dictionary<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport const select: typeof filter;\nexport const selectSeries: typeof filter;\nexport const selectLimit: typeof filterLimit;\nexport const reject: typeof filter;\nexport const rejectSeries: typeof filter;\nexport const rejectLimit: typeof filterLimit;\nexport function reduce<T, R, E>(arr: T[] | IterableIterator<T>, memo: R, iterator: AsyncMemoIterator<T, R, E>, callback?: AsyncResultCallback<R, E>): void;\nexport const inject: typeof reduce;\nexport const foldl: typeof reduce;\nexport const reduceRight: typeof reduce;\nexport const foldr: typeof reduce;\nexport function detect<T, E>(arr: T[] | IterableIterator<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultCallback<T, E>): void;\nexport function detect<T, E>(arr: Dictionary<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultCallback<T, E>): void;\nexport const detectSeries: typeof detect;\nexport function detectLimit<T, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultCallback<T, E>): void;\nexport function detectLimit<T, E>(arr: Dictionary<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncResultCallback<T, E>): void;\nexport const find: typeof detect;\nexport const findSeries: typeof detect;\nexport const findLimit: typeof detectLimit;\nexport function sortBy<T, V, E>(arr: T[] | IterableIterator<T>, iterator: AsyncResultIterator<T, V, E>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function some<T, E>(arr: T[] | IterableIterator<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport function some<T, E>(arr: Dictionary<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport const someSeries: typeof some;\nexport function someLimit<T, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport function someLimit<T, E>(arr: Dictionary<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport const any: typeof some;\nexport const anySeries: typeof someSeries;\nexport const anyLimit: typeof someLimit;\nexport function every<T, E>(arr: T[] | IterableIterator<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport function every<T, E>(arr: Dictionary<T>, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport const everySeries: typeof every;\nexport function everyLimit<T, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport function everyLimit<T, E>(arr: Dictionary<T>, limit: number, iterator: AsyncBooleanIterator<T, E>, callback?: AsyncBooleanResultCallback<E>): void;\nexport const all: typeof every;\nexport const allSeries: typeof every;\nexport const allLimit: typeof everyLimit;\n\nexport function concat<T, R, E>(arr: T[] | IterableIterator<T>, iterator: AsyncResultIterator<T, R[], E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport function concat<T, R, E>(arr: Dictionary<T>, iterator: AsyncResultIterator<T, R[], E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport function concatLimit<T, R, E>(arr: T[] | IterableIterator<T>, limit: number, iterator: AsyncResultIterator<T, R[], E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport function concatLimit<T, R, E>(arr: Dictionary<T>, limit: number,iterator: AsyncResultIterator<T, R[], E>, callback?: AsyncResultArrayCallback<R, E>): void;\nexport const concatSeries: typeof concat;\n\n// Control Flow\nexport function series<T, E>(tasks: AsyncFunction<T, E>[], callback?: AsyncResultArrayCallback<T, E>): void;\nexport function series<T, E>(tasks: Dictionary<AsyncFunction<T, E>>, callback?: AsyncResultObjectCallback<T, E>): void;\nexport function parallel<T, E>(tasks: Array<AsyncFunction<T, E>>, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function parallel<T, E>(tasks: Dictionary<AsyncFunction<T, E>>, callback?: AsyncResultObjectCallback<T, E>): void;\nexport function parallelLimit<T, E>(tasks: Array<AsyncFunction<T, E>>, limit: number, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function parallelLimit<T, E>(tasks: Dictionary<AsyncFunction<T, E>>, limit: number, callback?: AsyncResultObjectCallback<T, E>): void;\nexport function whilst<E>(test: () => boolean, fn: AsyncVoidFunction<E>, callback: ErrorCallback<E>): void;\nexport function doWhilst<T, E>(fn: AsyncFunctionEx<T, E>, test: (...results: T[]) => boolean, callback: ErrorCallback<E>): void;\nexport function until<E>(test: () => boolean, fn: AsyncVoidFunction<E>, callback: ErrorCallback<E>): void;\nexport function doUntil<T, E>(fn: AsyncFunctionEx<T, E>, test: (...results: T[]) => boolean, callback: ErrorCallback<E>): void;\nexport function during<E>(test: (testCallback : AsyncBooleanResultCallback<E>) => void, fn: AsyncVoidFunction<E>, callback: ErrorCallback<E>): void;\nexport function doDuring<E>(fn: AsyncVoidFunction<E>, test: (testCallback: AsyncBooleanResultCallback<E>) => void, callback: ErrorCallback<E>): void;\nexport function forever<E>(next: (next : ErrorCallback<E>) => void, errBack: ErrorCallback<E>) : void;\nexport function waterfall<T, E>(tasks: Function[], callback?: AsyncResultCallback<T, E | Error>): void;\nexport function compose(...fns: Function[]): Function;\nexport function seq(...fns: Function[]): Function;\nexport function applyEach(fns: Function[], argsAndCallback: any[]): void;           // applyEach(fns, args..., callback). TS does not support ... for a middle argument. Callback is optional.\nexport function applyEachSeries(fns: Function[], argsAndCallback: any[]): void;     // applyEachSeries(fns, args..., callback). TS does not support ... for a middle argument. Callback is optional.\nexport function queue<T, E>(worker: AsyncWorker<T, E>, concurrency?: number): AsyncQueue<T>;\nexport function queue<T, R, E>(worker: AsyncResultIterator<T, R, E>, concurrency?: number): AsyncQueue<T>;\nexport function priorityQueue<T, E>(worker: AsyncWorker<T, E>, concurrency: number): AsyncPriorityQueue<T>;\nexport function cargo<E>(worker : (tasks: any[], callback : ErrorCallback<E>) => void, payload? : number) : AsyncCargo;\nexport function auto<R extends Dictionary<any>, E>(tasks: AsyncAutoTasks<R, E>, concurrency?: number, callback?: AsyncResultCallback<R, E>): void;\nexport function autoInject<E>(tasks: any, callback?: AsyncResultCallback<any, E>): void;\nexport function retry<T, E>(opts: number, task: (callback : AsyncResultCallback<T, E>, results: any) => void, callback:  AsyncResultCallback<any, E | Error>): void;\nexport function retry<T, E>(opts: { times: number, interval: number|((retryCount: number) => number) }, task: (callback: AsyncResultCallback<T, E>, results : any) => void, callback:  AsyncResultCallback<any, E | Error>): void;\nexport function retryable<T, E>(opts: number | {times: number, interval: number}, task: AsyncFunction<T, E>): AsyncFunction<T, E | Error>;\nexport function apply<E>(fn: Function, ...args: any[]): AsyncFunction<any,E | Error>;\nexport function nextTick(callback: Function, ...args: any[]): void;\nexport const setImmediate: typeof nextTick;\n\nexport function reflect<T, E>(fn: AsyncFunction<T, E>) : (callback: (err: null, result: {error?: E, value?: T}) => void) => void;\nexport function reflectAll<T, E>(tasks: AsyncFunction<T, E>[]): ((callback: (err: null, result: {error?: E, value?: T}) => void) => void)[];\n\nexport function timeout<T, E>(fn: AsyncFunction<T, E>, milliseconds: number, info?: any): AsyncFunction<T, E | Error>;\nexport function timeout<T, R, E>(fn: AsyncResultIterator<T, R, E>, milliseconds: number, info?: any): AsyncResultIterator<T, R, E | Error>;\n\nexport function times<T, E> (n: number, iterator: AsyncResultIterator<number, T, E>, callback: AsyncResultArrayCallback<T, E>): void;\nexport function timesSeries<T, E>(n: number, iterator: AsyncResultIterator<number, T, E>, callback: AsyncResultArrayCallback<T, E>): void;\nexport function timesLimit<T, E>(n: number, limit: number, iterator: AsyncResultIterator<number, T, E>, callback: AsyncResultArrayCallback<T, E>): void;\n\nexport function transform<T, R, E>(arr: T[], iteratee: (acc: R[], item: T, key: number, callback: (error?: E) => void) => void, callback?: AsyncResultArrayCallback<T, E>): void;\nexport function transform<T, R, E>(arr: T[], acc: R[], iteratee: (acc: R[], item: T, key: number, callback: (error?: E) => void) => void, callback?: AsyncResultArrayCallback<T, E>): void;\n\nexport function transform<T, R, E>(arr: {[key: string] : T}, iteratee: (acc: {[key: string] : R}, item: T, key: string, callback: (error?: E) => void) => void, callback?: AsyncResultObjectCallback<T, E>): void;\nexport function transform<T, R, E>(arr: {[key: string] : T}, acc: {[key: string] : R}, iteratee: (acc: {[key: string] : R}, item: T, key: string, callback: (error?: E) => void) => void, callback?: AsyncResultObjectCallback<T, E>): void;\n\nexport function race<T, E>(tasks: (AsyncFunction<T, E>)[], callback: AsyncResultCallback<T, E | Error>) : void;\n\n// Utils\nexport function memoize(fn: Function, hasher?: Function): Function;\nexport function unmemoize(fn: Function): Function;\nexport function ensureAsync(fn: (... argsAndCallback: any[]) => void): Function;\nexport function constant(...values: any[]): Function;\nexport function asyncify(fn: Function): (...args: any[]) => any;\nexport function wrapSync(fn: Function): Function;\nexport function log(fn: Function, ...args: any[]): void;\nexport function dir(fn: Function, ...args: any[]): void;\n"}}},"startX":0,"startY":0},"PROJECT_META":{"projectName":"Hiru_project120107","projectDescription":"","projectVersion":"1.0.0","repoName":"Hiru_project120107","repoUrl":""}}